/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
//apply plugin: 'application'

compileJava {
    options.compilerArgs << '-g' // For debugging info
}

task run_client(type:JavaExec) {
     main = "org.smmo.client.Main"
     //args '-XstartOnFirstThread' // This arg goes to main method
     jvmArgs '-XstartOnFirstThread' // This arg goes to jvm
     classpath = sourceSets.main.runtimeClasspath
}

task run_server(type:JavaExec) {
     main = "org.smmo.server.Main"
     //args '-XstartOnFirstThread' // This arg goes to main method
     //jvmArgs '-XstartOnFirstThread' // This arg goes to jvm
    classpath = sourceSets.main.runtimeClasspath
    //if (getDebug()) {
	// toggle flag with --debug-jvm
        //jvmArgs '-Xdebug','-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005'	
    //}
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

import org.gradle.internal.os.OperatingSystem

switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		break
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
	break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = "natives-macos"
		break
}
project.ext.lwjglVersion = "3.1.6"

dependencies {
    // The production code uses Guava
    compile 'com.google.guava:guava:20.0'

    // All this stuff is auto generated by https://www.lwjgl.org/customize
    compile "org.lwjgl:lwjgl:$lwjglVersion"
    compile "org.lwjgl:lwjgl-assimp:$lwjglVersion"
    compile "org.lwjgl:lwjgl-glfw:$lwjglVersion"
    compile "org.lwjgl:lwjgl-openal:$lwjglVersion"
    compile "org.lwjgl:lwjgl-opengl:$lwjglVersion"
    compile "org.lwjgl:lwjgl-stb:$lwjglVersion"
    compile "org.lwjgl:lwjgl:$lwjglVersion:$lwjglNatives"
    compile "org.lwjgl:lwjgl-assimp:$lwjglVersion:$lwjglNatives"
    compile "org.lwjgl:lwjgl-glfw:$lwjglVersion:$lwjglNatives"
    compile "org.lwjgl:lwjgl-openal:$lwjglVersion:$lwjglNatives"
    compile "org.lwjgl:lwjgl-opengl:$lwjglVersion:$lwjglNatives"
    compile "org.lwjgl:lwjgl-stb:$lwjglVersion:$lwjglNatives"


    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    
    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

test {
     testLogging {
          events "passed", "skipped", "failed"
	  showStandardStreams = true
     }
}
